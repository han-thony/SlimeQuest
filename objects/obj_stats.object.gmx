<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create stats

health_points = 20;
max_health_points = health_points;
energy_points = 10;
max_energy_points = energy_points;
expr_points = 0;
max_expr_points = 3;
level = 1;
attack = 1;

if (instance_exists(obj_player)) {
    player_xstart = obj_player.x;
    player_ystart = obj_player.y;
} else {
    player_xstart = 0;
    player_ystart = 0;
}

previous_room = room;
room_start_action = NEW_ROOM;
level_counter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Energy regeneration time
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//clamps health

if (health_points &lt; 0) health_points = 0;

//Energy regen
if (energy_points &lt; max_energy_points &amp;&amp; alarm[0] == -1) {
    energy_points++;
}

if (obj_input.pause_key) {
    if (room != rm_pause) {
        if (instance_exists(obj_player)) {
            obj_player.persistent = false;
        }
        
        previous_room = room;
        room_persistent = true;
        room_goto(rm_pause);
    } else {
        room_goto(previous_room);
    }
    
    obj_input.pause_key = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Room start actions

if (room == rm_pause) exit;
if (room == rm_puzzle) exit;

switch (room_start_action) {
    case RETURN:
        break;
    case NEW_ROOM:
    default:
        if (instance_exists(obj_player)) {
            player_xstart = obj_player.x;
            player_ystart = obj_player.y;
        }
        break;
    case LOAD:
        scr_load_game();
        break;
}

room_persistent = false;
room_start_action = -1;

if (room == rm_test &amp;&amp; !instance_exists(obj_generator)) instance_create(0, 0, obj_generator);

if (room == rm_village) exit;
instance_create(0, 0, obj_land_check);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stat display

draw_set_halign(fa_center);
draw_set_colour($292929);
draw_roundrect(0, 0, 420, 80, false);

var percentage_health = (health_points / max_health_points) * 100;
draw_healthbar(16, 16, 280, 32, percentage_health, c_black, c_red, $00CD00, 0, true, false);
draw_text_colour(340, 16, "HP " + string(health_points) + "/" + string(max_health_points), c_white, c_white, c_white, c_white, 1);

var percentage_energy = (energy_points / max_energy_points) * 100;
draw_healthbar(16, 40, 280, 56, percentage_energy, c_black, c_aqua, c_blue, 0, true, false);
draw_text_colour(340, 40, "EP " + string(energy_points) + "/" + string(max_energy_points), c_white, c_white, c_white, c_white, 1);

var percentage_expr = (expr_points / max_expr_points) * 100;
draw_healthbar(16, 68, 280, 72, percentage_expr, c_black, c_yellow, c_white, 0, true, false);
draw_text_colour(340, 64, "LV " + string(level), c_white, c_white, c_white, c_white, 1);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
