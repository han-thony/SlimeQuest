<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Puzzle menu

audio_play_sound(snd_pause, 0, false);
question = "How do you spell computing?";

answer[0] = "Computing";
answer[1] = "Compting";
answer[2] = "ICT";
answer[3] = "Minesweeper";

correct_answer = 0;
menu_index = 0;

scr_get_question();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Used for timing in step, no code in here.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Update menu

if (alarm[0] &lt;= 0) {
    if (keyboard_check_pressed(ord('E'))){
        room_start_action = RETURN;
        room_goto(obj_stats.previous_room);
    }
    
    else if (obj_input.down_key) {
        audio_play_sound(snd_up_down_menu, 1, false);
        if (menu_index &lt; array_length_1d(answer) - 1) {
            menu_index++;
        } else {
            menu_index = 0;
        }
        
        alarm[0] = room_speed / 6;
    }
    
    if (obj_input.up_key) {
        audio_play_sound(snd_up_down_menu, 1, false);
        if (menu_index &gt; 0) {
            menu_index--;
        } else {
            menu_index = array_length_1d(answer) - 1;
        }
        
        alarm[0] = room_speed / 6;
    }
    
    if (obj_input.dash_key) {
        audio_play_sound(snd_select_menu, 1, false);
        if (menu_index == correct_answer) {
            room_start_action = RETURN;
            room_goto(obj_stats.previous_room);
        } else {
            audio_play_sound(snd_wrong, 1, false);
            scr_get_question();
        }
        
        obj_input.dash_key = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw menu options

var center_x = display_get_gui_width() / 2;
var center_y = display_get_gui_height() / 2;
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_text(center_x, center_y - 64, question);

for (var i = 0; i &lt;= array_length_1d(answer) - 1; i++) {
    draw_set_colour(c_gray);
    if (i == menu_index) {
        draw_set_colour(c_white);
    }
    
    draw_text(center_x, center_y + (32 * i), answer[i]);
}

draw_set_colour(c_white);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
